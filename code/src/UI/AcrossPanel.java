/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.*;




/**
 *
 * @author skerd
 */
public class AcrossPanel extends javax.swing.JPanel {

    /**
     * Creates new form AcrossPanel
     */
    
    static ArrayList<Object> acrossClueList;
    static ArrayList<Object> downClueList;
    static ArrayList<Object> newAcrossClueList;
    static ArrayList<Object> newDownClueList;
    
    static Object[][] acrossTableObject;
    static Object[][] downTableObject;
    
    static Object[][] oldAcrossTableObject;
    static Object[][] oldDownTableObject;
    
    public AcrossPanel(ArrayList<Object> acrossClueList, ArrayList<Object> downClueList, ArrayList<Object> newAcrossClueList, ArrayList<Object> newDownClueList) {
        
        this.acrossClueList = acrossClueList;
        this.downClueList = downClueList;
        this.newAcrossClueList = newAcrossClueList;
        this.newDownClueList = newDownClueList;
       
        Object[][] newAcrosTable = new Object[acrossClueList.size()][2];
        Object[][] newDownTable = new Object[downClueList.size()][2];
        
        Object[][] acrosTable = new Object[acrossClueList.size()][2];
        Object[][] downTable = new Object[downClueList.size()][2];
        
        for( int i = 0; i < newAcrossClueList.size(); i++){
            newAcrosTable[i][1] = ((ArrayList<Object>)newAcrossClueList.get(i)).get(0);
            newAcrosTable[i][0] = newAcrosTable[i][1] + " " + ((ArrayList<Object>)newAcrossClueList.get(i)).get(1);
        }
        
        for( int i = 0; i < newDownClueList.size(); i++){
            newDownTable[i][1] = ((ArrayList<Object>)newDownClueList.get(i)).get(0);
            newDownTable[i][0] = newDownTable[i][1] + " " + ((ArrayList<Object>)newDownClueList.get(i)).get(1);
        }
        
        
        for( int i = 0; i < acrossClueList.size(); i++){
            acrosTable[i][1] = ((ArrayList<Object>)acrossClueList.get(i)).get(0);
            acrosTable[i][0] = acrosTable[i][1] + " " + ((ArrayList<Object>)acrossClueList.get(i)).get(1);
        }
        
        for( int i = 0; i < downClueList.size(); i++){
            downTable[i][1] = ((ArrayList<Object>)downClueList.get(i)).get(0);
            downTable[i][0] = downTable[i][1] + " " + ((ArrayList<Object>)downClueList.get(i)).get(1);
        }
        
        acrossTableObject = newAcrosTable;
        downTableObject = newDownTable;
        
        oldAcrossTableObject = acrosTable;
        oldDownTableObject = downTable;
        
        initComponents();
        
    }
    
    static public void selectQuestionInTable(int id, String direction){
        
        if( direction.equals("A")){
            String selectedQuestion = "";
            System.out.println("The Across Table has [" + acrossClueList.size()  + "] rows!" );
            
            for( int i = 0; i < acrossClueList.size(); i++){
                
                int temp = (int)((ArrayList<Object>)(acrossClueList.get(i))).get(0);
                
                if( temp == id ){
                    selectedQuestion = temp + " " + (String)((ArrayList<Object>)(acrossClueList.get(i))).get(1);
                    aTable.setRowSelectionInterval(i, i);
                    break;
                }
                
            }
            //PuzzlePanel.questionLabel.setText(selectedQuestion);
            dTable.getSelectionModel().clearSelection();
            System.out.println("The selected question is: [" + selectedQuestion + "]");
        }
        else{
            String selectedQuestion = "";
            System.out.println("The Across Table has [" + downClueList.size()  + "] rows!" );
            
            for( int i = 0; i < downClueList.size(); i++){
                
                int temp = (int)((ArrayList<Object>)(downClueList.get(i))).get(0);
                
                if( temp == id ){
                    selectedQuestion = temp + " " + (String)((ArrayList<Object>)(downClueList.get(i))).get(1);
                    dTable.setRowSelectionInterval(i, i);
                    break;
                }
                
            }
            //PuzzlePanel.questionLabel.setText(selectedQuestion);
            aTable.getSelectionModel().clearSelection();
            System.out.println("The selected question is: [" + selectedQuestion + "]");
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        acrossPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        aTable = new javax.swing.JTable();
        downPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        dTable = new javax.swing.JTable();
        acrossPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        oaTable = new javax.swing.JTable();
        downPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        odTable = new javax.swing.JTable();

        acrossPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setText("Across:");

        aTable.setModel(new javax.swing.table.DefaultTableModel(
            acrossTableObject,
            new String [] {
                ""
            }
        ));
        aTable.setEditingColumn(0);
        aTable.setEditingRow(0);
        aTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                aTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(aTable);
        aTable.setRowSelectionAllowed(false);

        javax.swing.GroupLayout acrossPanelLayout = new javax.swing.GroupLayout(acrossPanel);
        acrossPanel.setLayout(acrossPanelLayout);
        acrossPanelLayout.setHorizontalGroup(
            acrossPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(acrossPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 556, Short.MAX_VALUE)
                .addContainerGap())
        );
        acrossPanelLayout.setVerticalGroup(
            acrossPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(acrossPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        downPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setText("Down:");

        dTable.setModel(new javax.swing.table.DefaultTableModel(
            downTableObject,
            new String [] {
                ""
            }
        ));
        dTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(dTable);
        dTable.setRowSelectionAllowed(false);

        javax.swing.GroupLayout downPanelLayout = new javax.swing.GroupLayout(downPanel);
        downPanel.setLayout(downPanelLayout);
        downPanelLayout.setHorizontalGroup(
            downPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(downPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(downPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE))
                .addContainerGap())
        );
        downPanelLayout.setVerticalGroup(
            downPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(downPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                .addContainerGap())
        );

        acrossPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel4.setText("Across (Before change):");

        oaTable.setModel(new javax.swing.table.DefaultTableModel(
            oldAcrossTableObject,
            new String [] {
                ""
            }
        ));
        oaTable.setEditingColumn(0);
        oaTable.setEditingRow(0);
        oaTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                oaTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(oaTable);
        aTable.setRowSelectionAllowed(false);

        javax.swing.GroupLayout acrossPanel1Layout = new javax.swing.GroupLayout(acrossPanel1);
        acrossPanel1.setLayout(acrossPanel1Layout);
        acrossPanel1Layout.setHorizontalGroup(
            acrossPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(acrossPanel1Layout.createSequentialGroup()
                .addGroup(acrossPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 556, Short.MAX_VALUE)
                    .addGroup(acrossPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        acrossPanel1Layout.setVerticalGroup(
            acrossPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(acrossPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        downPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setText("Down (Before Change):");

        odTable.setModel(new javax.swing.table.DefaultTableModel(
            oldDownTableObject,
            new String [] {
                ""
            }
        ));
        odTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                odTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(odTable);
        dTable.setRowSelectionAllowed(false);

        javax.swing.GroupLayout downPanel1Layout = new javax.swing.GroupLayout(downPanel1);
        downPanel1.setLayout(downPanel1Layout);
        downPanel1Layout.setHorizontalGroup(
            downPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(downPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(downPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE))
                .addContainerGap())
        );
        downPanel1Layout.setVerticalGroup(
            downPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(downPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(acrossPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(downPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(acrossPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(downPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(acrossPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(downPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(acrossPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(downPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void aTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aTableMouseClicked

        int column = 0;
        int row = aTable.getSelectedRow();
        String value = aTable.getModel().getValueAt(row, column).toString();
        System.out.println("Clicked on acrossTable: " + value);
        
        int questionNr = Integer.parseInt( value.substring(0, value.indexOf(" ")) );
        
        //PuzzlePanel.questionLabel.setText(value);
        PuzzlePanel.direction = "A";
        dTable.getSelectionModel().clearSelection();
        
        PuzzlePanel.findQuestion( questionNr );

    }//GEN-LAST:event_aTableMouseClicked

    private void dTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dTableMouseClicked
        
        int column = 0;
        int row = dTable.getSelectedRow();
        String value = dTable.getModel().getValueAt(row, column).toString();
        System.out.println("Clicked on downTable: " + value);
        
        int questionNr = Integer.parseInt( value.substring(0, value.indexOf(" ")) );
        
        //PuzzlePanel.questionLabel.setText(value);
        PuzzlePanel.direction = "D";
        aTable.getSelectionModel().clearSelection();
        
        PuzzlePanel.findQuestion( questionNr );
        
    }//GEN-LAST:event_dTableMouseClicked

    private void oaTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_oaTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_oaTableMouseClicked

    private void odTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_odTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_odTableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTable aTable;
    private javax.swing.JPanel acrossPanel;
    private javax.swing.JPanel acrossPanel1;
    public static javax.swing.JTable dTable;
    private javax.swing.JPanel downPanel;
    private javax.swing.JPanel downPanel1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    public static javax.swing.JTable oaTable;
    public static javax.swing.JTable odTable;
    // End of variables declaration//GEN-END:variables
}
